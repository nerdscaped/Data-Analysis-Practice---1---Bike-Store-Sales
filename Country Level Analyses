#So a little bit of explanation. I have found out a better way of doing things with pandas from my learning, so I will be using this method going forward.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
sales = pd.read_csv('C:/Users/Matt/Documents/Python/CSV/sales_data.csv')
sales['Profitability'] = sales['Profit'] / sales['Revenue'] * 100

#Graph showing mean profitability of each age group in each country
ProfUSA = sales.loc[sales['Country'] == 'United States', 'Profitability'].mean()
ProfAus = sales.loc[sales['Country'] == 'Australia', 'Profitability'].mean()
ProfFrance = sales.loc[sales['Country'] == 'France', 'Profitability'].mean()
ProfUK = sales.loc[sales['Country'] == 'United Kingdom', 'Profitability'].mean()
ProfGerm = sales.loc[sales['Country'] == 'Germany', 'Profitability'].mean()
ProfCan = sales.loc[sales['Country'] == 'Canada', 'Profitability'].mean()
sales.groupby(['Age_Group','Country'])["Profitability"].mean().unstack(0).plot.barh()
plt.plot([ProfUSA,ProfUSA], [4.6,5.4],color='black')
plt.plot([ProfAus,ProfAus], [-0.6,0.4],color='black')
plt.plot([ProfFrance,ProfFrance], [1.6,2.4],color='black')
plt.plot([ProfUK,ProfUK], [3.6,4.4],color='black')
plt.plot([ProfGerm,ProfGerm], [2.6,3.4],color='black')
plt.plot([ProfCan,ProfCan], [0.6,1.4],color='black')
plt.text(35,0.5,"Black bars represent overall mean")
plt.xlabel('Profitability Ratio (%)')
plt.ylabel('Country')
plt.title('Bar Chart Profitability of Each Age Group In Each Country')
plt.show()

ax = sales[['Profitability', 'Age_Group']].boxplot(by='Age_Group', figsize=(10,6))
ax.set_ylabel('Profitability')
plt.show()
#Graph showing mean profitability of each product category in each country
ProfUSA = sales.loc[sales['Country'] == 'United States', 'Profitability'].mean()
ProfAus = sales.loc[sales['Country'] == 'Australia', 'Profitability'].mean()
ProfFrance = sales.loc[sales['Country'] == 'France', 'Profitability'].mean()
ProfUK = sales.loc[sales['Country'] == 'United Kingdom', 'Profitability'].mean()
ProfGerm = sales.loc[sales['Country'] == 'Germany', 'Profitability'].mean()
ProfCan = sales.loc[sales['Country'] == 'Canada', 'Profitability'].mean()
sales.groupby(['Product_Category','Country'])["Profitability"].mean().unstack(0).plot.barh()
plt.plot([ProfUSA,ProfUSA], [4.6,5.4],color='black')
plt.plot([ProfAus,ProfAus], [-0.6,0.4],color='black')
plt.plot([ProfFrance,ProfFrance], [1.6,2.4],color='black')
plt.plot([ProfUK,ProfUK], [3.6,4.4],color='black')
plt.plot([ProfGerm,ProfGerm], [2.6,3.4],color='black')
plt.plot([ProfCan,ProfCan], [0.6,1.4],color='black')
plt.text(35,0.5,"Black bars represent overall mean")
plt.xlabel('Profitability Ratio (%)')
plt.ylabel('Country')
plt.title('Bar Chart Profitability of Each Product Category In Each Country')
plt.show()

ax = sales[['Profitability', 'Product_Category']].boxplot(by='Product_Category', figsize=(10,6))
ax.set_ylabel('Profitability')
plt.show()
#Graph showing mean profitability of each gender in each country
ProfUSA = sales.loc[sales['Country'] == 'United States', 'Profitability'].mean()
ProfAus = sales.loc[sales['Country'] == 'Australia', 'Profitability'].mean()
ProfFrance = sales.loc[sales['Country'] == 'France', 'Profitability'].mean()
ProfUK = sales.loc[sales['Country'] == 'United Kingdom', 'Profitability'].mean()
ProfGerm = sales.loc[sales['Country'] == 'Germany', 'Profitability'].mean()
ProfCan = sales.loc[sales['Country'] == 'Canada', 'Profitability'].mean()
sales.groupby(['Customer_Gender','Country'])["Profitability"].mean().unstack(0).plot.barh()
plt.plot([ProfUSA,ProfUSA], [4.6,5.4],color='black')
plt.plot([ProfAus,ProfAus], [-0.6,0.4],color='black')
plt.plot([ProfFrance,ProfFrance], [1.6,2.4],color='black')
plt.plot([ProfUK,ProfUK], [3.6,4.4],color='black')
plt.plot([ProfGerm,ProfGerm], [2.6,3.4],color='black')
plt.plot([ProfCan,ProfCan], [0.6,1.4],color='black')
plt.text(35,0.5,"Black bars represent overall mean")
plt.xlabel('Profitability Ratio (%)')
plt.ylabel('Country')
plt.title('Bar Chart Profitability of Each Gender In Each Country')
plt.show()

ax = sales[['Profitability', 'Customer_Gender']].boxplot(by='Customer_Gender', figsize=(10,6))
ax.set_ylabel('Profitability')
plt.show()

#pie chart to genders in each country
ax1 = plt.subplot2grid((2,3),(0,0))
plt.pie((11506,12430),colors=("r","b"))
plt.title('Australia')
#first row sec col
ax1 = plt.subplot2grid((2,3), (0, 1))
plt.pie((6496,7682),colors=("r","b"))
plt.title('Canada')
ax1 = plt.subplot2grid((2,3), (0, 2))
plt.pie((6712,6908),colors=("r","b"))
plt.title('United Kingdom')
#Second row first column
ax1 = plt.subplot2grid((2,3), (1, 0))
plt.pie((5504,5494),colors=("r","b"))
plt.title('France')
#second row second column
ax1 = plt.subplot2grid((2,3), (1, 1))
plt.pie((5572,5526),colors=("r","b"))
plt.title('Germany')
ax1 = plt.subplot2grid((2,3), (1, 2))
plt.pie((18934,20272),colors=("r","b"))
plt.title('United States')
ax1.legend()
